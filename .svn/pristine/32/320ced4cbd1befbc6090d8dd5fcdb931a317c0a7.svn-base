package com.jwt.dao;

import java.util.List;

import javax.persistence.ParameterMode;

import org.hibernate.SessionFactory;
import org.hibernate.procedure.ProcedureCall;
import org.hibernate.procedure.ProcedureOutputs;
import org.hibernate.result.ResultSetOutput;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.jwt.model.Cover;
import com.jwt.model.FinancialAccount;
import com.jwt.model.PayrollPayment;
@Repository
public class PayrollVendorDAOImpl implements PayrollVendorDAO {
	
	@Autowired
	private SessionFactory sessionFactory;

	@SuppressWarnings("unchecked")
	@Override
	public FinancialAccount GetPayrollAccount(int fac_id) {
		List<FinancialAccount> accounts =(List<FinancialAccount>)sessionFactory.getCurrentSession().createQuery("from FinancialAccount where facility_id="+fac_id + "and product_sku='PAYROLL' ").list();

		if(accounts.size()>0)
		{
		return accounts.get(0);
		}
		else
		{
			return null;
		}
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<PayrollPayment> getPayrollPayment() {
		  return (List<PayrollPayment>)sessionFactory.getCurrentSession().createQuery("from PayrollPayment v where v.payment_status != 1 or v.payment_status is null order by v.cloud_transid").list();

	}

	@SuppressWarnings("unchecked")
	@Override
	public String submitPayroll(int facility, String user_name, double total, String payments) {
		ProcedureCall procedureCall = sessionFactory.getCurrentSession().createStoredProcedureCall("submit_payroll_payment");
		procedureCall.registerParameter("p_facility_id", Integer.class, ParameterMode.IN);
		procedureCall.registerParameter("p_logged_user", String.class, ParameterMode.IN);
		procedureCall.registerParameter("p_total_paid_amount", Double.class, ParameterMode.IN);
		procedureCall.registerParameter("p_transactions", String.class, ParameterMode.IN);
		procedureCall.getParameterRegistration("p_facility_id").bindValue(facility);
		procedureCall.getParameterRegistration("p_logged_user").bindValue(user_name);
		procedureCall.getParameterRegistration("p_total_paid_amount").bindValue(total);
		procedureCall.getParameterRegistration("p_transactions").bindValue(payments);
		ProcedureOutputs procedureOutputs = procedureCall.getOutputs();
		ResultSetOutput resultSetOutput = (ResultSetOutput) procedureOutputs.getCurrent();
		@SuppressWarnings("rawtypes")
		List results = resultSetOutput.getResultList();
		String result = (String)results.get(0);
		return result;
	}
	

}
